// Generated by CoffeeScript 1.7.1
(function() {
  var Abstract, Awaker,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(document).ready(function() {
    return new window.UI.Awaker($('body'));
  });

  window.UI = [];

  Awaker = (function() {
    function Awaker($ele, func_afterawake) {
      $ele.find('.awakable').andSelf().filter('.awakable').each(function() {
        var $node, UIClass, awake;
        $node = $(this);
        $node.removeClass('awakable');
        $node.data('func_afterawake', func_afterawake);
        awake = $node.attr('data-awake');
        UIClass = window.UI[awake];
        if (UIClass != null) {
          return new UIClass().createNew($node);
        } else {
          throw "Missing component '" + awake + "'.";
        }
      });
    }

    return Awaker;

  })();

  window.UI.Awaker = Awaker;

  Abstract = (function() {
    function Abstract() {
      this.data = __bind(this.data, this);
      this.clone = __bind(this.clone, this);
    }

    Abstract.prototype.createNew = function($node) {
      $node.data('UI', this);
      this.$node = $node;
      this.init();
      return this;
    };

    Abstract.prototype.clone = function(target) {
      return $.extend({}, target);
    };

    Abstract.prototype.data = function(key, ref) {
      var data;
      if (ref == null) {
        ref = false;
      }
      data = this.$node.data(key);
      if (ref) {
        return data;
      } else {
        return this.clone(data);
      }
    };

    return Abstract;

  })();

  window.UI.Abstract = Abstract;

}).call(this);
